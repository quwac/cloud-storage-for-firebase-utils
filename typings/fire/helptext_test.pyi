"""
This type stub file was generated by pyright.
"""

import six
from fire import testutils

"""Tests for the helptext module."""
class HelpTest(testutils.BaseTestCase):
  def setUp(self):
    ...
  
  def testHelpTextNoDefaults(self):
    ...
  
  def testHelpTextNoDefaultsObject(self):
    ...
  
  def testHelpTextFunction(self):
    ...
  
  def testHelpTextFunctionWithDefaults(self):
    ...
  
  def testHelpTextFunctionWithBuiltin(self):
    ...
  
  def testHelpTextFunctionIntType(self):
    ...
  
  def testHelpTextEmptyList(self):
    ...
  
  def testHelpTextShortList(self):
    ...
  
  def testHelpTextInt(self):
    ...
  
  def testHelpTextNoInit(self):
    ...
  
  @testutils.skipIf(six.PY2, 'Python 2 does not support keyword-only arguments.')
  def testHelpTextKeywordOnlyArgumentsWithDefault(self):
    ...
  
  @testutils.skipIf(six.PY2, 'Python 2 does not support keyword-only arguments.')
  def testHelpTextKeywordOnlyArgumentsWithoutDefault(self):
    ...
  
  def testHelpScreen(self):
    ...
  
  def testHelpScreenForFunctionDocstringWithLineBreak(self):
    ...
  
  def testHelpScreenForFunctionFunctionWithDefaultArgs(self):
    ...
  
  def testHelpTextUnderlineFlag(self):
    ...
  
  def testHelpTextBoldCommandName(self):
    ...
  
  def testHelpTextObjectWithGroupAndValues(self):
    ...
  
  def testHelpTextNameSectionCommandWithSeparator(self):
    ...
  
  def testHelpTextNameSectionCommandWithSeparatorVerbose(self):
    ...
  


class UsageTest(testutils.BaseTestCase):
  def testUsageOutput(self):
    ...
  
  def testUsageOutputVerbose(self):
    ...
  
  def testUsageOutputMethod(self):
    ...
  
  def testUsageOutputFunctionWithHelp(self):
    ...
  
  def testUsageOutputFunctionWithDocstring(self):
    ...
  
  def testUsageOutputCallable(self):
    ...
  
  def testUsageOutputConstructorWithParameter(self):
    ...
  
  def testUsageOutputConstructorWithParameterVerbose(self):
    ...
  
  def testUsageOutputEmptyDict(self):
    ...
  
  def testUsageOutputNone(self):
    ...
  
  def testInitRequiresFlagSyntaxSubclassNamedTuple(self):
    ...
  


if __name__ == '__main__':
  ...
